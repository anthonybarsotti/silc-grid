@import "variables";

.silk-grid {
    margin-right: $silk-grid--gutter * -1;
    margin-left: $silk-grid--gutter * -1;
}

.silk-grid__col {
    float: left;
    margin: 0 $silk-grid--gutter ($silk-grid--gutter * 2);
    width: 100 - ($silk-grid--gutter * 2);
}
    
@for $i from 1 to length($silk-core--breakpoints) + 1 {
    
    @include media(nth(nth($silk-core--breakpoints, $i), 1)) {
        
        // Columns
        @for $x from 1 to $silk-grid--columns {
            .silk-grid__col--#{nth(nth($silk-core--breakpoints, $i), 1)}-#{$x}
            {
                width: 100% / $silk-grid--columns * $x - $silk-grid--gutter * 2;
            }
        }
        
        @for $x from 1 to $silk-grid--columns {
            .silk-grid__col--#{nth(nth($silk-core--breakpoints, $i), 1)}-#{$x}-flush {
                width: 100% / $silk-grid--columns * $x;
            }
        }
        
        // Push
        @if $silk-grid--push-classes {
            @for $x from 1 to $silk-grid--columns {
                .silk-grid__col--#{nth(nth($silk-core--breakpoints, $i), 1)}-push-#{$x} {
                    margin-left: 100% / $silk-grid--columns * $x + $silk-grid--gutter;
                }
            }
        }
        
        // Pull
        @if $silk-grid--pull-classes {
            @for $x from 1 to $silk-grid--columns {
                .silk-grid__col--#{nth(nth($silk-core--breakpoints, $i), 1)}-pull-#{$x} {
                    margin-left: 100% / $silk-grid--columns * $x * -1 + $silk-grid--gutter;
                }
            }
        }
    }
}
